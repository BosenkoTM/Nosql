services:
  # MongoDB Service
  mongodb:
    container_name: mongodb
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongouser
      MONGO_INITDB_ROOT_PASSWORD: mongopass
    ports:
      - "27017:27017"
    volumes:
      - mongodb_volume:/data/db
    networks:
      - backend

  # Mongo Express Service (Web UI for MongoDB)
  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=mongouser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=mongopass
      - ME_CONFIG_BASICAUTH_USERNAME=adminuser
      - ME_CONFIG_BASICAUTH_PASSWORD=adminpasswd
      - ME_CONFIG_MONGODB_SERVER=mongodb
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    volumes:
      - mongo_express_volume:/data/db
    networks:
      - backend

  # PostgreSQL Service
  postgres-compose:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped

  pgadmin-compose:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - postgres-compose
    restart: unless-stopped
    networks:
      - backend
      
volumes:
  mongodb_volume:
  mongo_express_volume:

networks:
  backend:
    driver: bridge